<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tangerineSpecter.oms.system.mapper.DataConstellationMapper">
	<resultMap id="BaseResultMap"
		type="com.tangerineSpecter.oms.system.domain.DataConstellation">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="datetime" property="dateTime" jdbcType="VARCHAR" />
		<result column="date" property="date" jdbcType="INTEGER" />
		<result column="all_luck" property="allLuck" jdbcType="VARCHAR" />
		<result column="color" property="color" jdbcType="VARCHAR" />
		<result column="health" property="health" jdbcType="VARCHAR" />
		<result column="love" property="love" jdbcType="VARCHAR" />
		<result column="money" property="money" jdbcType="VARCHAR" />
		<result column="number" property="number" jdbcType="INTEGER" />
		<result column="QFriend" property="QFriend" jdbcType="VARCHAR" />
		<result column="summary" property="summary" jdbcType="VARCHAR" />
		<result column="work_luck" property="workLuck" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		data_constellation
		where id = #{id}
	</delete>
	<insert id="insert"
		parameterType="com.tangerineSpecter.oms.system.domain.DataConstellation"
		useGeneratedKeys="true" keyProperty="id">
		insert into data_constellation
		(name, datetime, date,
		all_luck, color, health,
		love, money, number,
		QFriend, summary, work_luck,
		create_time)
		values (#{name}, #{dateTime},
		#{date},
		#{allLuck}, #{color}, #{health},
		#{love}, #{money}, #{number},
		#{QFriend}, #{summary}, #{workLuck},
		#{createTime})
	</insert>
	<update id="updateByPrimaryKey"
		parameterType="com.tangerineSpecter.oms.system.domain.DataConstellation">
		update data_constellation
		set name = #{name},
		datetime =
		#{dateTime},
		date = #{date},
		all_luck = #{allLuck},
		color = #{color},
		health =
		#{health},
		love = #{love},
		money = #{money},
		number = #{number},
		QFriend =
		#{QFriend},
		summary = #{summary},
		work_luck = #{workLuck},
		create_time =
		#{createTime}
		where id = #{id}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select id, name, datetime, date, all_luck, color,
		health,
		love, money, number,
		QFriend,
		summary, work_luck, create_time
		from
		data_constellation
		where id = #{id}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, name, datetime,
		date, all_luck, color, health, love, money, number,
		QFriend,
		summary,
		work_luck, create_time
		from data_constellation
	</select>
	<select id="queryListByCreateTime" resultType="java.lang.String">
		select name
		from
		data_constellation
		where create_time =
		#{createTime}
	</select>
	<select id="queryForPage" resultMap="BaseResultMap">
		select id, name, datetime,
		date, all_luck, color, health, love, money,
		number,
		QFriend,
		summary,
		work_luck, create_time
		from data_constellation
		<where>
			<if test="star!=null and star!='-1'">
				and name = #{star}
			</if>
			<if test="queryDay!='' and queryDay!=null">
				and create_time = #{queryDay}
			</if>
		</where>
		order by create_time desc,id desc
		<if test="page!=null">
			limit #{start},#{size}
		</if>
	</select>
	<select id="queryForPageCount" resultType="java.lang.Long">
		select Count(*) from data_constellation
		<where>
			<if test="star!=null and star!='-1'">
				and name = #{star}
			</if>
			<if test="queryDay!='' and queryDay!=null">
				and create_time = #{queryDay}
			</if>
		</where>
	</select>
	<select id="getConstellactionByName" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select id, name, datetime, date, all_luck, color,
		health,
		love, money, number,
		QFriend,
		summary, work_luck, create_time
		from
		data_constellation
		where name like "%${starName}%"
		order by
		create_time desc
		limit 0,1
	</select>
</mapper>